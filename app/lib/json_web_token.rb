class JsonWebToken
  # SECRET_KEY is the key for encoding and decoding the token
  # we are assigning SECRET_KEY to be the secret key that is generated by default by the rails app
  SECRET_KEY = Rails.application.secrets.secret_key_base. to_s

  # the payload argument is a key-value object for holding data that we want to be encoded
  # if the expiration argument is not specified it will give you the default value in 24 hour or one day
  def self.encode(payload, expiration = 24.hours.from_now)
    payload[:expiration] = expiration.to_i
    JWT.encode(payload, SECRET_KEY)
  end

  # this token expiration is given by the user
  def self.decode(token)
    decoded = JWT.decode(token, SECRET_KEY)[0]
    HashWithIndifferentAccess.new decoded
  end
end

=begin
- RESOURCES:
  - https://medium.com/binar-academy/rails-api-jwt-authentication-a04503ea3248
=end